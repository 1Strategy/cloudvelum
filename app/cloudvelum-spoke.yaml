AWSTemplateFormatVersion: "2010-09-09"

Description: >
  CloudVelum is an AWS Cloudwatch monitoring framework that accelerates your
  ability to get up and running with native AWS monitoring services. This is the spoke template
  that gets deployed from the hub.

  The template deploys a thin spoke. Event rules are created to forward events on to the hub that
  are relevant to CloudVelum. A role is created, that can be assumed by the lambdas running in the hub
  account so they can work in the spoke.

Parameters:

  CloudVelumEnvironment:
    Type: String
    Description: CloudVelum running environment to target (prd or dev)
    Default: prd

  CloudVelumIamRoleNamePrefix:
    Type: String
    Description: Prefix to add to all the iam roles that are created (include the hyphen)

  HubAccountId:
    Type: String
    Description: Hub account id

  HubPrivateAssetsS3Bucket:
    Type: String
    Description: Hub account private assets bucket

  HubAccountWorkerRoleArn:
    Type: String
    Description: Arn of the role in the hub account that the lambdas will use to assume a role into the spoke

  HubCloudVelumStepFunctionBuilderArn:
    Type: String
    Description: Hub Step function builder Id

  HubDebugLocalRoleArn:
    Type: String
    Description: 'Local role for debug use'
    Default: ""

Conditions:
  IsHubAccount: !Equals
    - !Ref HubAccountId
    - !Ref AWS::AccountId

  IsUseIamRoleNamePrefix: !Not
    - !Equals
      - !Ref CloudVelumIamRoleNamePrefix
      - ""
  IsUseDebugLocalRole: !Not
    - !Equals
      - !Ref HubDebugLocalRoleArn
      - ""

Resources:

  # ---------------------------------------------------------------------------
  # Role
  # Used by the hub accounts step function lambdas to assume into the spoke
  # read resources, and create cloudformation stacks with alarms
  # ---------------------------------------------------------------------------
  CloudVelumWorkerRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !If
        - IsUseIamRoleNamePrefix
        - !Sub "${CloudVelumIamRoleNamePrefix}cloudvelum-spoke-worker-role"
        - "cloudvelum-spoke-worker-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          # Allow hub role to assume me
          - Effect: "Allow"
            Principal:
              AWS: !Ref HubAccountWorkerRoleArn
            Action: "sts:AssumeRole"
          - !If
            - IsUseDebugLocalRole
            - Effect: "Allow"
              Principal:
                AWS: !Ref HubDebugLocalRoleArn
              Action: "sts:AssumeRole"
            - !Ref AWS::NoValue
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      Policies:
        - PolicyName: AccessCloudWatch
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllowCloudWatchAlarms
                Effect: Allow
                Action:
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DeleteAlarms
                Resource: !Sub "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:cloudvelum-*"
              - Sid: AllowCloudWatchDashboard
                Effect: Allow
                Action:
                  - cloudwatch:GetDashboard
                  - cloudwatch:ListDashboards
                  - cloudwatch:PutDashboard
                  - cloudwatch:ListMetrics
                  - cloudwatch:DeleteDashboards
                Resource:
                  - !Sub "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:cloudvelum-*"
                  - !Sub "arn:aws:cloudwatch::${AWS::AccountId}:dashboard/cloudvelum-*"
        - PolicyName: AccessCloudFormation
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllowCloudFormationCrud
                Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:DeleteStack
                Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/cloudvelum-*/*"
              - Sid: AllowCloudFormationList
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: "*"
        - PolicyName: AccessS3
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllowCloudFormationCrud
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:GetBucketLocation
                  - s3:GetObjectVersion
                  - s3:GetLifecycleConfiguration
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:PutLifecycleConfiguration
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${HubPrivateAssetsS3Bucket}"
                  - !Sub "arn:${AWS::Partition}:s3:::${HubPrivateAssetsS3Bucket}/*"

  # ---------------------------------------------------------------------------
  # Role
  # Match events to cloudvelum tags
  # ---------------------------------------------------------------------------
  # Role for event rule to use to start step function
  CloudVelumTagEventRuleRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !If
        - IsUseIamRoleNamePrefix
        - !Sub "${CloudVelumIamRoleNamePrefix}cloudvelum-hub-event-rule-role"
        - "cloudvelum-hub-event-rule-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - events.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - !If
          - IsHubAccount
          # If its the hub account, allow invoking step function
          - PolicyName: StatesExecutionPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: states:StartExecution
                  Resource: !Ref HubCloudVelumStepFunctionBuilderArn
          # If its not the hub account, allow forwarding to hub
          - PolicyName: AllowForwardToHubPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: events:PutEvents
                  Resource: !Sub "arn:aws:events:${AWS::Region}:${HubAccountId}:event-bus/default"

  # ---------------------------------------------------------------------------
  # Event Rules
  # Match events to cloudvelum tags
  # ---------------------------------------------------------------------------
  CloudVelumTagEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: >
        Match events for any cloudvelum tag and send to step function so the alarms
        can be updated
      EventPattern:
        detail-type:
          - Tag Change on Resource
        source:
          - aws.tag
        detail:
          changed-tag-keys:
            - { "prefix": "cloudvelum:" }
          service:
            - { "anything-but": ["cloudformation"] }
      State: ENABLED
      Targets:
        - !If
          - IsHubAccount
          # If its the hub account, forward events to the hub step function
          - Arn: !Ref HubCloudVelumStepFunctionBuilderArn
            RoleArn: !GetAtt CloudVelumTagEventRuleRole.Arn
            Id: "cloudvelum-tag-event-to-steps-builder"
          # If its not the hub account, forward events to the hub event bus
          - Arn: !Sub arn:aws:events:${AWS::Region}:${HubAccountId}:event-bus/default
            RoleArn: !GetAtt CloudVelumTagEventRuleRole.Arn
            Id: "cloudvelum-tag-event-to-hub-bus"

  CloudVelumAutoscalingTagEventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: >
        Match events for any cloudvelum tag changed on autoscaling group and send to step function so the alarms
        can be updated
      EventPattern:
        detail-type:
          - AWS API Call via CloudTrail
        source:
          - aws.autoscaling
        detail:
          eventName: ["DeleteTags", "CreateOrUpdateTags"]
          requestParameters:
            tags:
              key:
                - { "prefix": "cloudvelum:" }
      State: ENABLED
      Targets:
        - !If
          - IsHubAccount
          # If its the hub account, forward events to the hub step function
          - Arn: !Ref HubCloudVelumStepFunctionBuilderArn
            RoleArn: !GetAtt CloudVelumTagEventRuleRole.Arn
            Id: "cloudvelum-tag-event-to-steps-builder"
          # If its not the hub account, forward events to the hub event bus
          - Arn: !Sub arn:aws:events:${AWS::Region}:${HubAccountId}:event-bus/default
            RoleArn: !GetAtt CloudVelumTagEventRuleRole.Arn
            Id: "cloudvelum-tag-event-to-hub-bus"


  # TODO: Custom resource invoke to tear down stacks
